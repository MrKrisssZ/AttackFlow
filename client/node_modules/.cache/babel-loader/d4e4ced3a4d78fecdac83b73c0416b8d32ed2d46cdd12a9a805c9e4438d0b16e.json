{"ast":null,"code":"var _jsxFileName = \"/Users/shenyiwei/Desktop/7015/web interface/attackflow_15pg_Ruby/client/src/components/DropDownMenu.js\",\n  _s = $RefreshSig$();\nimport { useState, useMemo } from 'react';\n// for displaying different option according to the previous level of the architecture\n// tactics -> categories\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst categoriesByTactics = {\n  Default: ['Categories'],\n  Enterprise: ['Categories', 'Reconnaissance', 'Resource Development', 'InitialAccess', 'Execution', 'Persistence', 'PrivilegeEscalation', 'DefenseEvasion', 'CredentialAccess', 'Discovery', 'LateralMovement', 'Collection', 'CommandandControl', 'Exfiltration', 'Impact'],\n  Mobile: ['Categories', 'InitialAccess', 'Execution', 'Persistence', 'PrivilegeEscalation', 'DefenseEvasion', 'CredentialAccess', 'Discovery', 'LateralMovement', 'Collection', 'CommandandControl', 'Exfiltration', 'Impact'],\n  ICS: ['Categories', 'InitialAccess', 'Execution', 'Persistence', 'PrivilegeEscalation', 'Evasion', 'Discovery', 'LateralMovement', 'Collection', 'Command and Control', 'InhibitResponseFunction', 'ImpairProcessControl', 'Impact']\n};\n\n// categories -> techniques by different tactics\n// since same techniques under different tactics with different techID\n// To-do: complete the dictionary for all categories with techniques\nconst techniqueByCategoriesEnterprise = {\n  Default: ['Techniques'],\n  Reconnaissance: ['Techniques', 'ActiveScanning', '...']\n};\nconst techniqueByCategoriesMobile = {\n  InitialAccess: ['Techniques', 'Drive-ByCompromise', '...']\n};\nconst techniqueByCategoriesICS = {\n  InitialAccess: ['Techniques', 'Drive-ByCompromise', 'ExploitPublicFacingApplication', '...']\n};\nconst DropdownMenu = () => {\n  _s();\n  const [incidentDate, setIncidentDate] = useState(new Date());\n  const [tactics, setTactics] = useState('');\n  const [categories, setCategories] = useState('');\n  const [techniques, setTechniques] = useState('');\n  const [description, setDescription] = useState('');\n  const categoryOptions = useMemo(() => {\n    if (!tactics) {\n      return categoriesByTactics.Default.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this));\n    }\n    return categoriesByTactics[tactics].map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option,\n      children: option\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this));\n  }, [tactics]);\n  const techniqueOptions = useMemo(() => {\n    if (!tactics || !categories) {\n      return techniqueByCategoriesEnterprise.Default.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this));\n    }\n    // To-do: create other conditions for the techniques for all different tactics\n    // tactics: Enterprise\n    if (tactics == 'Enterprise' && categories == 'Reconnaissance') {\n      return techniqueByCategoriesEnterprise[categories].map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this));\n    }\n\n    // tactics: Mobile\n    if (tactics == 'Mobile' && categories == 'InitialAccess') {\n      return techniqueByCategoriesMobile[categories].map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this));\n    }\n    // tactics: ICS\n    if (tactics == 'ICS' && categories == 'InitialAccess') {\n      return techniqueByCategoriesICS[categories].map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this));\n    }\n  }, [tactics, categories]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Annotation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Tactics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            defaultValue: tactics,\n            onChange: e => setTactics(e.target.value),\n            name: \"tactics\",\n            id: \"tactics\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Default\",\n              children: \"Tactics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Enterprise\",\n              children: \"Enterprise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Mobile\",\n              children: \"Mobile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ICS\",\n              children: \"ICS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            defaultValue: categories,\n            onChange: e => setCategories(e.target.value),\n            name: \"categories\",\n            id: \"categories\",\n            children: categoryOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Techniques\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            defaultValue: techniques,\n            onChange: e => setTechniques(e.target.value),\n            name: \"subtechniques\",\n            id: \"techniques\",\n            children: techniqueOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(DropdownMenu, \"UyovBeTpp58ffVg/uP9iZ9SjN9I=\");\n_c = DropdownMenu;\nexport default DropdownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropdownMenu\");","map":{"version":3,"names":["useState","useMemo","jsxDEV","_jsxDEV","Fragment","_Fragment","categoriesByTactics","Default","Enterprise","Mobile","ICS","techniqueByCategoriesEnterprise","Reconnaissance","techniqueByCategoriesMobile","InitialAccess","techniqueByCategoriesICS","DropdownMenu","_s","incidentDate","setIncidentDate","Date","tactics","setTactics","categories","setCategories","techniques","setTechniques","description","setDescription","categoryOptions","map","option","value","children","fileName","_jsxFileName","lineNumber","columnNumber","techniqueOptions","defaultValue","onChange","e","target","name","id","type","_c","$RefreshReg$"],"sources":["/Users/shenyiwei/Desktop/7015/web interface/attackflow_15pg_Ruby/client/src/components/DropDownMenu.js"],"sourcesContent":["import { useState, useMemo } from 'react'\n// for displaying different option according to the previous level of the architecture\n// tactics -> categories\nconst categoriesByTactics = {\n    Default: ['Categories'],\n    Enterprise: ['Categories', 'Reconnaissance', 'Resource Development' ,'InitialAccess', 'Execution', 'Persistence', 'PrivilegeEscalation', 'DefenseEvasion', 'CredentialAccess', 'Discovery', 'LateralMovement', 'Collection', 'CommandandControl', 'Exfiltration', 'Impact'],\n    Mobile: ['Categories', 'InitialAccess', 'Execution', 'Persistence', 'PrivilegeEscalation', 'DefenseEvasion', 'CredentialAccess', 'Discovery', 'LateralMovement', 'Collection', 'CommandandControl', 'Exfiltration', 'Impact'],\n    ICS: ['Categories', 'InitialAccess', 'Execution', 'Persistence', 'PrivilegeEscalation', 'Evasion', 'Discovery', 'LateralMovement', 'Collection', 'Command and Control', 'InhibitResponseFunction', 'ImpairProcessControl', 'Impact'],\n};\n\n// categories -> techniques by different tactics\n// since same techniques under different tactics with different techID\n// To-do: complete the dictionary for all categories with techniques\nconst techniqueByCategoriesEnterprise = {\n    Default: ['Techniques'],\n    Reconnaissance: ['Techniques', 'ActiveScanning', '...'],\n}\n\nconst techniqueByCategoriesMobile = {\n    InitialAccess: ['Techniques', 'Drive-ByCompromise', '...'],\n}\n\nconst techniqueByCategoriesICS = {\n    InitialAccess: ['Techniques', 'Drive-ByCompromise', 'ExploitPublicFacingApplication', '...'],\n}\nconst DropdownMenu = () => {\n    const [ incidentDate, setIncidentDate ] = useState(new Date());\n    const [ tactics, setTactics ] = useState('');\n    const [ categories, setCategories ] = useState('');\n    const [ techniques, setTechniques ] = useState('');\n    const [ description, setDescription ] = useState('');\n\n    const categoryOptions = useMemo(() => {\n        if (!tactics) {\n            return categoriesByTactics.Default.map((option) => (\n                <option value={ option } key={ option }>\n                    { option }\n                </option>\n            ));\n        }\n        return categoriesByTactics[tactics].map((option) => (\n            <option value={ option } key={ option }>\n                { option }\n            </option>\n        ));\n    }, [tactics]);\n\n    const techniqueOptions = useMemo(() => {\n        if (!tactics || !categories) {\n            return techniqueByCategoriesEnterprise.Default.map((option) => (\n                <option value= { option } key={ option }>\n                    {option }\n                </option>\n            ));\n        }\n        // To-do: create other conditions for the techniques for all different tactics\n        // tactics: Enterprise\n        if (tactics == 'Enterprise' && categories == 'Reconnaissance') {\n            return techniqueByCategoriesEnterprise[categories].map((option) => (\n                <option value = { option } key={ option }>\n                    { option }\n                </option>\n            ))\n        }\n        \n        // tactics: Mobile\n        if (tactics == 'Mobile' && categories == 'InitialAccess') {\n            return techniqueByCategoriesMobile[categories].map((option) => (\n                <option value= { option } key={ option }>\n                    { option }\n                </option>\n            ))\n        }\n        // tactics: ICS\n        if (tactics == 'ICS' && categories == 'InitialAccess') {\n            return techniqueByCategoriesICS[categories].map((option) => (\n                <option value = { option } key={ option }>\n                    { option }\n                </option>\n            ))\n        }\n    }, [tactics, categories]);\n        \n    return (\n        <>\n            <div>\n                <h1>\n                    Annotation\n                </h1>\n            </div>\n            <div>\n                <form>\n                    <div>\n                        <p>Tactics</p>\n                        <select\n                            defaultValue={ tactics }\n                            onChange={(e) => setTactics(e.target.value)}\n                            name='tactics'\n                            id='tactics'\n                        >\n                            <option value='Default'>Tactics</option>\n                            <option value='Enterprise'>Enterprise</option>\n                            <option value='Mobile'>Mobile</option>\n                            <option value='ICS'>ICS</option>\n                        </select>\n                        <select\n                            defaultValue={ categories }\n                            onChange={(e) => setCategories(e.target.value)}\n                            name='categories'\n                            id='categories'  \n                        >\n                            { categoryOptions }\n                        </select>\n\n                        <p>Techniques</p>\n                        <select\n                            defaultValue={ techniques }\n                            onChange={(e) => setTechniques(e.target.value)}\n                            name='subtechniques'\n                            id='techniques'\n                        >\n                            { techniqueOptions }\n                        </select>\n                    </div>\n                    <button type='submit'>\n                        OK\n                    </button>\n                </form>\n            </div>\n        </>\n    );\n};\n\nexport default DropdownMenu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}