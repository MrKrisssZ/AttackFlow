{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './UseAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n\n  // const fetchUserRole = async (userID) => {\n  //     const response = await fetch('/api/users/role?userID=${userID}')\n  //     const json = await response.json()\n  //     return json.role\n  // }\n\n  const login = async (userID, password) => {\n    setIsLoading(true);\n    setError(null);\n\n    // fetch user's role\n    // const userRole = await fetchUserRole(userID)\n\n    const response = await fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userID,\n        password\n      })\n      // body: JSON.stringify({ userID, password, role: userRole })\n    });\n\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"CW/YlZO722weclF1gYkZElu3bt0=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","userID","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["/Users/shenyiwei/Desktop/7015/web interface/attackflow_15pg_Ruby/client/src/hooks/UseLogin.js"],"sourcesContent":["import { useState } from 'react'\nimport { useAuthContext } from './UseAuthContext'\n\nexport const useLogin = () => {\n    const [ error, setError ] = useState(null)\n    const [ isLoading, setIsLoading ] = useState(null)\n    const { dispatch } = useAuthContext()\n\n    // const fetchUserRole = async (userID) => {\n    //     const response = await fetch('/api/users/role?userID=${userID}')\n    //     const json = await response.json()\n    //     return json.role\n    // }\n\n    const login = async (userID, password) => {\n        setIsLoading(true)\n        setError(null)\n\n        // fetch user's role\n        // const userRole = await fetchUserRole(userID)\n\n        const response = await fetch('/api/users/login', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({ userID, password })\n            // body: JSON.stringify({ userID, password, role: userRole })\n        })\n        const json = await response.json()\n\n        if (!response.ok) {\n            setIsLoading(false)\n            setError(json.error)\n        }\n        if (response.ok) {\n            // save the user to local storage\n            localStorage.setItem('user', JSON.stringify(json))\n\n            // update the auth context\n            dispatch({type: 'LOGIN', payload: json})\n\n            setIsLoading(false)\n        }\n    }\n    return { login, isLoading, error }\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAAEC,KAAK,EAAEC,QAAQ,CAAE,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAEM,SAAS,EAAEC,YAAY,CAAE,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;;EAErC;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,KAAK;IACtCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;;IAEd;IACA;;IAEA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,MAAM;QAAEC;MAAS,CAAC;MACzC;IACJ,CAAC,CAAC;;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACdb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB;IACA,IAAIQ,QAAQ,CAACQ,EAAE,EAAE;MACb;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;MAExCZ,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EACD,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACtC,CAAC;AAAAD,EAAA,CAzCYD,QAAQ;EAAA,QAGID,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}